local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local Window = Fluent:CreateWindow({
    Title = "Kaka Hub | Forgotten 2.3",
    SubTitle = "by Kaka",
    TabWidth = 100,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl
})

local HomeTab = Window:AddTab({ Title = "Home", Icon = "rbxassetid://4483345998" })

local logSection = HomeTab:AddSection("Recent Updates")
HomeTab:AddParagraph({
    Title = "Update Log",
    Content = [[
- add generator ui
- fix do all generator
- add stamina edit - sprint
- inf stamina idk if work
- paragraph in main tab
- esp for item and generator
- Aimbot is HERE!
]]
})

local timeLabel = HomeTab:AddParagraph({
    Title = "Time Zones",
    Content = "Loading..."
})

task.spawn(function()
    while task.wait(1) do
        local now = os.time()
        local utc = os.date("!%H:%M:%S", now)
        local localt = os.date("%H:%M:%S", now)
        local bangkok = os.date("!%H:%M:%S", now + 7 * 3600)
        local newyork = os.date("!%H:%M:%S", now - 4 * 3600)
        local london = os.date("!%H:%M:%S", now + 0 * 3600)
        local tokyo = os.date("!%H:%M:%S", now + 9 * 3600)

        timeLabel:Set({
            Title = "Time Zones",
            Content = string.format("Local: %s\nUTC: %s\nBangkok: %s\nNew York: %s\nLondon: %s\nTokyo: %s", localt, utc, bangkok, newyork, london, tokyo)
        })
    end
end)

local MainTab = Window:AddTab({ Title = "Main", Icon = "rbxassetid://4483345998" })

MainTab:AddButton({
    Title = "Do All Generators",
    Callback = function()
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local function getCharacter()
            local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local hrp = char:WaitForChild("HumanoidRootPart")
            local humanoid = char:WaitForChild("Humanoid")
            return char, humanoid, hrp
        end
        local function teleportLeftOf(part, offset)
            local _, _, hrp = getCharacter()
            offset = offset or 5
            local leftCFrame = part.CFrame * CFrame.new(-offset, 0, 0)
            hrp.CFrame = leftCFrame + Vector3.new(0, 3, 0)
        end
        local function fireNearestPrompt(part, range)
            range = range or 10
            local _, _, hrp = getCharacter()
            local nearestPrompt
            local nearestDist = math.huge
            for _, descendant in ipairs(part:GetDescendants()) do
                if descendant:IsA("ProximityPrompt") then
                    local dist = (descendant.Parent.Position - hrp.Position).Magnitude
                    if dist < nearestDist and dist <= range then
                        nearestPrompt = descendant
                        nearestDist = dist
                    end
                end
            end
            if nearestPrompt then
                pcall(function()
                    nearestPrompt:InputHoldBegin()
                    task.wait(0.5)
                    nearestPrompt:InputHoldEnd()
                end)
            end
        end
        local function getAllGenerators()
            local gens = {}
            local success, map = pcall(function()
                return workspace:WaitForChild("Map"):WaitForChild("Ingame"):WaitForChild("Map")
            end)
            if success then
                for _, model in ipairs(map:GetDescendants()) do
                    if model:IsA("Model") and model.Name == "Generator" then
                        local part = model.PrimaryPart or model:FindFirstChildWhichIsA("BasePart")
                        local re = model:FindFirstChild("Remotes") and model.Remotes:FindFirstChild("RE")
                        if part and re then
                            table.insert(gens, {Part = part, Remote = re})
                        end
                    end
                end
            end
            return gens
        end
        local function activateAllGenerators()
            local generators = getAllGenerators()
            for _, gen in ipairs(generators) do
                teleportLeftOf(gen.Part, 5)
                task.wait(0.3)
                fireNearestPrompt(gen.Part)
                task.wait(0.2)
                for i = 1, 4 do
                    pcall(function()
                        gen.Remote:FireServer()
                    end)
                    task.wait(0.2)
                end
                task.wait(2)
            end
        end
        activateAllGenerators()
    end
})

MainTab:AddButton({
    Title = "Generator ui",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/BDT91tTw"))()
    end
})

MainTab:AddButton({
    Title = "Instant finished Generator",
    Callback = function()
        local fullMap = workspace:WaitForChild("Map"):WaitForChild("Ingame"):WaitForChild("Map")
        for _, descendant in ipairs(fullMap:GetDescendants()) do
            if descendant:IsA("Model") and descendant.Name == "Generator" then
                local remotes = descendant:FindFirstChild("Remotes")
                local re = remotes and remotes:FindFirstChild("RE")
                if re then
                    for i = 1, 4 do
                        pcall(function()
                            re:FireServer()
                        end)
                        task.wait(0.2)
                    end
                    break
                end
            end
        end
    end
})

MainTab:AddParagraph({ Title = "Info", Content = "Instant Generator is still work you had to go to generator hold e then use instant gen" })

MainTab:AddToggle({
    Title = "Semi aimbot",
    Default = false,
    Callback = function(Value)
        getgenv().FaceHighHP = Value
        if Value then
            task.spawn(function()
                while getgenv().FaceHighHP do
                    local myChar = Players.LocalPlayer.Character
                    local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
                    if myHRP then
                        local target = nil
                        local minDist = math.huge
                        for _, plr in pairs(Players:GetPlayers()) do
                            if plr ~= Players.LocalPlayer and plr.Character then
                                local hum = plr.Character:FindFirstChildOfClass("Humanoid")
                                local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
                                if hum and hrp and hum.Health > 200 then
                                    local dist = (hrp.Position - myHRP.Position).Magnitude
                                    if dist < minDist then
                                        minDist = dist
                                        target = hrp
                                    end
                                end
                            end
                        end
                        if target then
                            local lookPos = Vector3.new(target.Position.X, myHRP.Position.Y, target.Position.Z)
                            myHRP.CFrame = CFrame.new(myHRP.Position, lookPos)
                        end
                    end
                    task.wait(0.1)
                end
            end)
        end
    end
})

MainTab:AddButton({
    Title = "get Medkit",
    Callback = function()
        local player = game.Players.LocalPlayer
        local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if not root then return end
        local medkitPrompt = workspace:FindFirstChild("Map")
            and workspace.Map:FindFirstChild("Ingame")
            and workspace.Map.Ingame:FindFirstChild("Medkit")
            and workspace.Map.Ingame.Medkit:FindFirstChild("ItemRoot")
            and workspace.Map.Ingame.Medkit.ItemRoot:FindFirstChildWhichIsA("ProximityPrompt")
        if medkitPrompt then
            local originalPosition = root.Position
            root.CFrame = CFrame.new(medkitPrompt.Parent.Position + Vector3.new(0, 2, 0))
            task.wait(0.2)
            fireproximityprompt(medkitPrompt)
            task.wait(0.3)
            root.CFrame = CFrame.new(originalPosition)
        end
    end
})

MainTab:AddButton({
    Title = "get BloxyCola",
    Callback = function()
        local player = game.Players.LocalPlayer
        local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if not root then return end
        local colaPrompt = workspace:FindFirstChild("Map")
            and workspace.Map:FindFirstChild("Ingame")
            and workspace.Map.Ingame:FindFirstChild("BloxyCola")
            and workspace.Map.Ingame.BloxyCola:FindFirstChild("ItemRoot")
            and workspace.Map.Ingame.BloxyCola.ItemRoot:FindFirstChildWhichIsA("ProximityPrompt")
        if colaPrompt then
            local originalPosition = root.Position
            root.CFrame = CFrame.new(colaPrompt.Parent.Position + Vector3.new(0, 2, 0))
            task.wait(0.2)
            fireproximityprompt(colaPrompt)
            task.wait(0.3)
            root.CFrame = CFrame.new(originalPosition)
        end
    end
})

MainTab:AddButton({
    Title = "get Fries",
    Callback = function()
        local player = game.Players.LocalPlayer
        local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if not root then return end
        local friesPrompt = workspace:FindFirstChild("Map")
            and workspace.Map:FindFirstChild("Ingame")
            and workspace.Map.Ingame:FindFirstChild("FriesFood")
            and workspace.Map.Ingame.FriesFood:FindFirstChild("ItemRoot")
            and workspace.Map.Ingame.FriesFood.ItemRoot:FindFirstChildWhichIsA("ProximityPrompt")
        if friesPrompt then
            local originalPosition = root.Position
            root.CFrame = CFrame.new(friesPrompt.Parent.Position + Vector3.new(0, 2, 0))
            task.wait(0.2)
            fireproximityprompt(friesPrompt)
            task.wait(0.3)
            root.CFrame = CFrame.new(originalPosition)
        end
    end
})

local PlayerTab = Window:AddTab({ Title = "Players", Icon = "users" })

local PlayersDropdown = PlayerTab:AddDropdown("PlayerList", {
    Title = "Select Player",
    Values = {},
    Multi = false,
    Default = nil
})

local HealthLabel = PlayerTab:AddParagraph({
    Title = "Target Health",
    Content = "Select a player to see health"
})

local function updatePlayerList()
    local names = {}
    for _, p in ipairs(game.Players:GetPlayers()) do
        if p ~= game.Players.LocalPlayer then
            table.insert(names, p.Name)
        end
    end
    PlayersDropdown:SetValue(names[1] or "")
    PlayersDropdown.Values = names
end

updatePlayerList()
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)

PlayersDropdown:OnChanged(function(selected)
    local target = game.Players:FindFirstChild(selected)
    if target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") then
        HealthLabel:Set({Title = "Target Health", Content = tostring(target.Character:FindFirstChildOfClass("Humanoid").Health)})
    else
        HealthLabel:Set({Title = "Target Health", Content = "Unavailable"})
    end
end)

PlayerTab:AddButton({
    Title = "Teleport to Selected Player",
    Callback = function()
        local selected = PlayersDropdown.Value
        local target = game.Players:FindFirstChild(selected)
        local hrp = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and hrp then
            hrp.CFrame = target.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
        end
    end
})

PlayerTab:AddButton({
    Title = "Teleport to Lowest Health Player",
    Callback = function()
        local lowest, dist = nil, math.huge
        for _, p in ipairs(game.Players:GetPlayers()) do
            if p ~= game.Players.LocalPlayer and p.Character then
                local hum = p.Character:FindFirstChildOfClass("Humanoid")
                if hum and hum.Health < dist then
                    dist = hum.Health
                    lowest = p
                end
            end
        end
        local hrp = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if lowest and lowest.Character and lowest.Character:FindFirstChild("HumanoidRootPart") and hrp then
            hrp.CFrame = lowest.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
        end
    end
})

local MiscTab = Window:AddTab({ Title = "Misc", Icon = "rbxassetid://4483345998" })

local slideCooldown = false
MiscTab:AddButton({
    Title = "Slide",
    Callback = function()
        if slideCooldown then return end
        local char = LocalPlayer.Character
        if not char then return end
        local hrp = char:FindFirstChild("HumanoidRootPart")
        local hum = char:FindFirstChildOfClass("Humanoid")
        if not hrp or not hum then return end
        local moveDir = hum.MoveDirection
        if moveDir.Magnitude == 0 then
            local cam = workspace.CurrentCamera
            moveDir = cam and cam.CFrame.LookVector or Vector3.new(0,0,1)
        end
        local bv = Instance.new("BodyVelocity")
        bv.MaxForce = Vector3.new(1e5,0,1e5)
        bv.Velocity = moveDir.Unit * 80
        bv.Parent = hrp
        slideCooldown = true
        task.delay(0.3, function() bv:Destroy() end)
        task.delay(2, function() slideCooldown = false end)
    end
})

MiscTab:AddSlider({
    Title = "WalkSpeed",
    Min = 16,
    Max = 200,
    Default = 16,
    Increment = 1,
    Callback = function(value)
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then hum.WalkSpeed = value end
    end
})

MiscTab:AddSlider({
    Title = "JumpPower",
    Min = 50,
    Max = 300,
    Default = 50,
    Increment = 1,
    Callback = function(value)
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then hum.JumpPower = value end
    end
})

local espEnabled = false
local espBoxes = {}
local function toggleESP(state)
    espEnabled = state
    for _, box in pairs(espBoxes) do box:Destroy() end
    table.clear(espBoxes)
    if not espEnabled then return end
    task.spawn(function()
        while espEnabled do
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    if not espBoxes[player] then
                        local box = Instance.new("BoxHandleAdornment")
                        box.Size = Vector3.new(4,6,2)
                        box.Color3 = Color3.new(1,0,0)
                        box.Adornee = player.Character.HumanoidRootPart
                        box.AlwaysOnTop = true
                        box.ZIndex = 5
                        box.Transparency = 0.5
                        box.Parent = game.CoreGui
                        espBoxes[player] = box
                    end
                end
            end
            for p, box in pairs(espBoxes) do
                if not p:IsDescendantOf(Players) or not p.Character or not p.Character:FindFirstChild("HumanoidRootPart") then
                    box:Destroy()
                    espBoxes[p] = nil
                end
            end
            task.wait(1)
        end
    end)
end

MiscTab:AddToggle({
    Title = "Player ESP",
    Default = false,
    Callback = toggleESP
})

MiscTab:AddButton({
    Title = "Inf stamina",
    Callback = function()
        for _, module in pairs(getgc(true)) do
            if typeof(module) == "table" and rawget(module,"StaminaLoss") then
                module.StaminaLoss = 0
            end
        end
    end
})

MiscTab:AddParagraph({ Title = "Inf stamina info", Content = "- every new round restart, reapply inf stamina" })

MiscTab:AddTextbox({
    Title = "Stamina Loss",
    Default = "10",
    TextDisappear = false,
    Callback = function() end
})
