local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local Window = Fluent:CreateWindow({
    Title = "Kaka Hub | Forgotten 2.3",
    SubTitle = "by Kaka",
    TabWidth = 100,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl
})

local HomeTab = Window:AddTab({ Title = "Home", Icon = "rbxassetid://4483345998" })

local logSection = HomeTab:AddSection("Recent Updates")
HomeTab:AddParagraph({
    Title = "Update Log",
    Content = [[
- add generator ui
- fix do all generator
- add stamina edit - sprint
- inf stamina idk if work
- paragraph in main tab
- esp for item and generator
- Aimbot is HERE!
]]
})

local timeLabel = HomeTab:AddParagraph({
    Title = "Time Zones",
    Content = "Loading..."
})

task.spawn(function()
    while task.wait(1) do
        local now = os.time()
        local utc = os.date("!%H:%M:%S", now)
        local localt = os.date("%H:%M:%S", now)
        local bangkok = os.date("!%H:%M:%S", now + 7 * 3600)
        local newyork = os.date("!%H:%M:%S", now - 4 * 3600)
        local london = os.date("!%H:%M:%S", now + 0 * 3600)
        local tokyo = os.date("!%H:%M:%S", now + 9 * 3600)

        timeLabel:Set({
            Title = "Time Zones",
            Content = string.format("Local: %s\nUTC: %s\nBangkok: %s\nNew York: %s\nLondon: %s\nTokyo: %s", localt, utc, bangkok, newyork, london, tokyo)
        })
    end
end)

local MainTab = Window:AddTab({ Title = "Main", Icon = "rbxassetid://4483345998" })

MainTab:AddButton({
    Title = "Do All Generators",
    Callback = function()
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local function getCharacter()
            local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local hrp = char:WaitForChild("HumanoidRootPart")
            local humanoid = char:WaitForChild("Humanoid")
            return char, humanoid, hrp
        end
        local function teleportLeftOf(part, offset)
            local _, _, hrp = getCharacter()
            offset = offset or 5
            local leftCFrame = part.CFrame * CFrame.new(-offset, 0, 0)
            hrp.CFrame = leftCFrame + Vector3.new(0, 3, 0)
        end
        local function fireNearestPrompt(part, range)
            range = range or 10
            local _, _, hrp = getCharacter()
            local nearestPrompt
            local nearestDist = math.huge
            for _, descendant in ipairs(part:GetDescendants()) do
                if descendant:IsA("ProximityPrompt") then
                    local dist = (descendant.Parent.Position - hrp.Position).Magnitude
                    if dist < nearestDist and dist <= range then
                        nearestPrompt = descendant
                        nearestDist = dist
                    end
                end
            end
            if nearestPrompt then
                pcall(function()
                    nearestPrompt:InputHoldBegin()
                    task.wait(0.5)
                    nearestPrompt:InputHoldEnd()
                end)
            end
        end
        local function getAllGenerators()
            local gens = {}
            local success, map = pcall(function()
                return workspace:WaitForChild("Map"):WaitForChild("Ingame"):WaitForChild("Map")
            end)
            if success then
                for _, model in ipairs(map:GetDescendants()) do
                    if model:IsA("Model") and model.Name == "Generator" then
                        local part = model.PrimaryPart or model:FindFirstChildWhichIsA("BasePart")
                        local re = model:FindFirstChild("Remotes") and model.Remotes:FindFirstChild("RE")
                        if part and re then
                            table.insert(gens, {Part = part, Remote = re})
                        end
                    end
                end
            end
            return gens
        end
        local function activateAllGenerators()
            local generators = getAllGenerators()
            for _, gen in ipairs(generators) do
                teleportLeftOf(gen.Part, 5)
                task.wait(0.3)
                fireNearestPrompt(gen.Part)
                task.wait(0.2)
                for i = 1, 4 do
                    pcall(function()
                        gen.Remote:FireServer()
                    end)
                    task.wait(0.2)
                end
                task.wait(2)
            end
        end
        activateAllGenerators()
    end
})

MainTab:AddButton({
    Title = "Generator ui",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/BDT91tTw"))()
    end
})

MainTab:AddButton({
    Title = "Instant finished Generator",
    Callback = function()
        local fullMap = workspace:WaitForChild("Map"):WaitForChild("Ingame"):WaitForChild("Map")
        for _, descendant in ipairs(fullMap:GetDescendants()) do
            if descendant:IsA("Model") and descendant.Name == "Generator" then
                local remotes = descendant:FindFirstChild("Remotes")
                local re = remotes and remotes:FindFirstChild("RE")
                if re then
                    for i = 1, 4 do
                        pcall(function()
                            re:FireServer()
                        end)
                        task.wait(0.2)
                    end
                    break
                end
            end
        end
    end
})

MainTab:AddParagraph({ Title = "Info", Content = "Instant Generator is still work you had to go to generator hold e then use instant gen" })


local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local PlayerTab = Window:AddTab({ Title = "Players", Icon = "users" })

local PlayersDropdown = PlayerTab:AddDropdown("PlayerList", {
    Title = "Select Player",
    Values = {"No Players"},
    Multi = false,
    Default = "No Players"
})

local HealthLabel = PlayerTab:AddParagraph({
    Title = "Target Health",
    Content = "Select a player to see health"
})

local function updatePlayerList()
    local names = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            table.insert(names, p.Name)
        end
    end
    if #names == 0 then
        names = {"No Players"}
    end
    PlayersDropdown.Values = names
    PlayersDropdown:SetValue(names[1])
end

updatePlayerList()
local playerAddedConn = Players.PlayerAdded:Connect(updatePlayerList)
local playerRemovingConn = Players.PlayerRemoving:Connect(updatePlayerList)

task.spawn(function()
    while task.wait(0.5) do
        local selected = PlayersDropdown.Value
        if selected and selected ~= "No Players" then
            local target = Players:FindFirstChild(selected)
            if target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") then
                local health = target.Character:FindFirstChildOfClass("Humanoid").Health
                HealthLabel:Set({Title = "Target Health", Content = tostring(math.floor(health))})
            else
                HealthLabel:Set({Title = "Target Health", Content = "Unavailable"})
            end
        else
            HealthLabel:Set({Title = "Target Health", Content = "Select a player"})
        end
    end
end)

PlayerTab:AddButton({
    Title = "Teleport to Selected Player",
    Callback = function()
        local selected = PlayersDropdown.Value
        if selected == "No Players" then return end
        local target = Players:FindFirstChild(selected)
        local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") and hrp then
            hrp.CFrame = target.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
        end
    end
})

PlayerTab:AddButton({
    Title = "Teleport to Lowest Health Player",
    Callback = function()
        local lowest, dist = nil, math.huge
        for _, p in ipairs(Players:GetPlayers()) do
            if p ~= LocalPlayer and p.Character then
                local hum = p.Character:FindFirstChildOfClass("Humanoid")
                if hum and hum.Health < dist and hum.Health > 0 then
                    dist = hum.Health
                    lowest = p
                end
            end
        end
        local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if lowest and lowest.Character and lowest.Character:FindFirstChild("HumanoidRootPart") and hrp then
            hrp.CFrame = lowest.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
        end
    end
})

local MiscTab = Window:AddTab({ Title = "Misc", Icon = "settings" })

local slideCooldown = false
MiscTab:AddButton({
    Title = "Slide",
    Callback = function()
        if slideCooldown then return end
        local char = LocalPlayer.Character
        if not char then return end
        local hrp = char:FindFirstChild("HumanoidRootPart")
        local hum = char:FindFirstChildOfClass("Humanoid")
        if not hrp or not hum then return end
        local moveDir = hum.MoveDirection
        if moveDir.Magnitude == 0 then
            local cam = workspace.CurrentCamera
            moveDir = cam and cam.CFrame.LookVector or Vector3.new(0, 0, 1)
        end
        local bv = Instance.new("BodyVelocity")
        bv.MaxForce = Vector3.new(1e5, 0, 1e5)
        bv.Velocity = moveDir.Unit * 80
        bv.Parent = hrp
        slideCooldown = true
        task.delay(0.3, function() bv:Destroy() end)
        task.delay(2, function() slideCooldown = false end)
    end
})

local WalkSpeedBox = MiscTab:AddInput("WalkSpeedInput", {Title = "WalkSpeed", Placeholder = "Enter walk speed (e.g., 16)", Default = "16"})
local JumpPowerBox = MiscTab:AddInput("JumpPowerInput", {Title = "JumpPower", Placeholder = "Enter jump power (e.g., 50)", Default = "50"})

local function applySpeedAndJump()
    local ws = tonumber(WalkSpeedBox.Value) or 16
    local jp = tonumber(JumpPowerBox.Value) or 50
    local char = LocalPlayer.Character
    if char then
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.WalkSpeed = ws
            hum.JumpPower = jp
        end
    end
end

MiscTab:AddButton({Title = "Apply Speed & Jump", Callback = applySpeedAndJump})
LocalPlayer.CharacterAdded:Connect(function() task.wait(1); applySpeedAndJump() end)

MiscTab:AddButton({
    Title = "Inf Stamina",
    Callback = function()
        for _, module in pairs(getgc(true)) do
            if typeof(module) == "table" and rawget(module, "StaminaLoss") then
                module.StaminaLoss = 0
            end
        end
    end
})

MiscTab:AddTextbox({
    Title = "Stamina Loss",
    Default = "10",
    Finished = true,
    Callback = function(value)
        local staminaValue = tonumber(value)
        for _, module in pairs(getgc(true)) do
            if typeof(module) == "table" and rawget(module, "StaminaLoss") then
                module.StaminaLoss = staminaValue
            end
        end
    end
})

local availableThemes = {"Dark", "Light", "Aqua", "Amethyst"}
MiscTab:AddDropdown("ThemeSelector", {
    Title = "GUI Theme",
    Values = availableThemes,
    Multi = false,
    Default = "Dark", -- Matches initial theme set in Window:CreateWindow
    Callback = function(value)
        local success, errorMsg = pcall(function()
            Fluent:SetTheme(value)
        end)
        if success then
            Fluent:Notify({
                Title = "Theme Changed",
                Content = "GUI theme set to " .. value,
                Duration = 3
            })
            getgenv().SelectedTheme = value
        else
            Fluent:Notify({
                Title = "Theme Error",
                Content = "Failed to set theme: " .. tostring(errorMsg),
                Duration = 5
            })
        end
    end
})

Window:OnDestroy(function()
    playerAddedConn:Disconnect()
    playerRemovingConn:Disconnect()
end)
